import { NextRequest, NextResponse } from "next/server";

import axios from 'axios';


const DISCORD_DOORMAN_WEBHOOK_URL = process.env.DISCORD_DOORMAN_WEBHOOK_URL;




export async function middleware(request: NextRequest) {
    const res = NextResponse.next();
    let ip = request.ip ?? request.headers.get('x-real-ip')

    const forwardedFor = request.headers.get('x-forwarded-for')
    if (!ip && forwardedFor) {
        ip = forwardedFor.split(',').at(0) ?? 'Unknown'
    }

    //console.log(request)

    // search params of the request
    const searchParams = new URLSearchParams(request.nextUrl.search)
    // source 
    const source = searchParams.get('s')
    //referer
    const referer = request.headers.get('referer')
    //user agent
    const userAgent = request.headers.get('user-agent')
    //path
    const path = request.url


    // disabled bots
    const disabledBots = ['Discordbot', 'Canva']

    if (disabledBots.some(bot => userAgent?.includes(bot))) {
        return res;
    }


    // if the request is not from the main page and the referer is not from the main page
    if (request.nextUrl.pathname === '/') {
        return res;
    }

    //if localhost
    if (ip === '::1') {
        return res;
    }

    fetch(DISCORD_DOORMAN_WEBHOOK_URL as string, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            content: `**IP:** ${ip} \n **Source:** ${source} \n **Referer:** ${referer} \n **forwardedFor:** ${forwardedFor} \n **Path:** ${path} \n **User Agent:** ${userAgent}`
        })
    })

    return res;
}